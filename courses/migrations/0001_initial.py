# Generated by Django 3.1.3 on 2020-12-09 14:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='Поле автозаполняемо. Должно быть уникально.', unique=True, verbose_name='слаг')),
                ('title', models.CharField(help_text='Название курса. Служит заголовком на лендинге. Желательно, чтобы было в едином стиле с предыдущими потоками. Макс. длина 200 символов.', max_length=200, verbose_name='название курса')),
                ('subtitle', models.CharField(help_text='Макс. длина 250 символов.', max_length=250, verbose_name='подзаголовок')),
                ('short_description', models.TextField(help_text='Краткое описание курса. Макс. длина 300 символов', max_length=300, verbose_name='краткое описание')),
                ('header_image', models.ImageField(help_text='Главное изображение, которое выводится в шапке лендинга.', upload_to='courses/%Y-%m-%d/', verbose_name='главное изображение')),
                ('preview_image', models.ImageField(help_text='Картинка, которая выводится в кратком описании курса в списке всех курсов.', upload_to='courses/%Y-%m-%d/', verbose_name='анонс картинка')),
                ('starting_date', models.DateField(help_text='дата начала курса', verbose_name='дата начала')),
                ('adding_date', models.DateTimeField(auto_now_add=True, verbose_name='дата добавления')),
                ('detail_description', models.TextField(verbose_name='детальное описание курса')),
                ('detail_image', models.ImageField(upload_to='courses/%Y-%m-%d/', verbose_name='картинка к детальному описанию курса')),
                ('results', models.TextField(help_text='Опишите, какие результаты получат участники курса после его окончания.', verbose_name='результат курса')),
                ('certificate', models.BooleanField(default=False, help_text='Поставьте галочку, если по окончанию курса участникам выдается сертификат', verbose_name='выдается сертификат')),
                ('certificate_image', models.ImageField(blank=True, help_text='Если выше вы указали, что сертификат выдается, обязательно необходимо к данному курсу прикрепить его пример.', null=True, upload_to='courses/%Y-%m-%d/', verbose_name='картинка сертификата')),
                ('price', models.DecimalField(decimal_places=0, help_text='Введите целое число без дробной части', max_digits=5, verbose_name='стоимость')),
                ('is_published', models.BooleanField(default=True, help_text='Курс опубликован на сайте, доступен к покупке и регистрации. Во время начала курса не забудьте снять галочку.', verbose_name='опубликован')),
                ('students', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='участники курса')),
            ],
            options={
                'verbose_name': 'курс',
                'verbose_name_plural': 'курсы',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='название категории')),
                ('short_description', models.CharField(max_length=200, verbose_name='краткое описание')),
                ('students', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='студенты')),
            ],
            options={
                'verbose_name': 'субъект',
                'verbose_name_plural': 'субъекты',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_person', models.ImageField(upload_to='courses/%Y-%m-%d/', verbose_name='картинка к типу персонажа')),
                ('person', models.CharField(max_length=50, verbose_name='тип персонажа')),
                ('person_detail', models.CharField(max_length=100, verbose_name='краткое описание персонажа')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person', to='courses.course', verbose_name='курс')),
            ],
            options={
                'verbose_name': 'персонаж ЦА',
                'verbose_name_plural': 'персонажи ЦА',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Макс. длина 150 символов', max_length=150, verbose_name='название модуля')),
                ('description', models.TextField(blank=True, verbose_name='описание модуля')),
                ('is_published', models.BooleanField(default=True, help_text='Модуль показан на лендинге курса и в кабинете пользователя.', verbose_name='опубликован')),
                ('is_active', models.BooleanField(default=False, verbose_name='Доступен к прохождению.')),
                ('course', models.ForeignKey(help_text='К какому курсу относится модуль.', on_delete=django.db.models.deletion.CASCADE, to='courses.course', verbose_name='курс')),
            ],
            options={
                'verbose_name': 'модуль',
                'verbose_name_plural': 'модули',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Макс. длина 150 символов.', max_length=150, verbose_name='название урока')),
                ('description', models.TextField(blank=True, verbose_name='описание урока')),
                ('video', models.URLField(blank=True, help_text='В формате "http://..."', verbose_name='ссылка на видео трансляцию')),
                ('materials', models.URLField(blank=True, verbose_name='ссылка на материалы')),
                ('is_published', models.BooleanField(default=True, help_text='Урок показан на лендинге курса и в кабинете пользователя.', verbose_name='опубликован')),
                ('is_active', models.BooleanField(default=False, verbose_name='доступен к прохождению.')),
                ('module', models.ForeignKey(help_text='К какому модулю относится урок.', on_delete=django.db.models.deletion.CASCADE, related_name='lesson', to='courses.module', verbose_name='модуль')),
            ],
            options={
                'verbose_name': 'урок',
                'verbose_name_plural': 'уроки',
                'ordering': ['pk'],
            },
        ),
        migrations.AddField(
            model_name='course',
            name='subject',
            field=models.ForeignKey(help_text='К какому субъекту относится данный поток курса.', on_delete=django.db.models.deletion.CASCADE, to='courses.subject', verbose_name='субъект'),
        ),
    ]
