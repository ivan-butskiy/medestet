# Generated by Django 3.1.3 on 2021-02-19 01:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0006_lesson_video_record'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='course',
            options={'ordering': ['-pk'], 'verbose_name': 'Курс', 'verbose_name_plural': 'Курсы'},
        ),
        migrations.AlterModelOptions(
            name='lesson',
            options={'ordering': ['pk'], 'verbose_name': 'Урок', 'verbose_name_plural': 'Уроки'},
        ),
        migrations.AlterModelOptions(
            name='module',
            options={'ordering': ['pk'], 'verbose_name': 'Модуль', 'verbose_name_plural': 'Модули'},
        ),
        migrations.AlterModelOptions(
            name='person',
            options={'verbose_name': 'Персонаж ЦА', 'verbose_name_plural': 'Персонажи ЦА'},
        ),
        migrations.AlterModelOptions(
            name='subject',
            options={'verbose_name': 'Субъект', 'verbose_name_plural': 'Субъекты'},
        ),
        migrations.RemoveField(
            model_name='course',
            name='students',
        ),
        migrations.AddField(
            model_name='course',
            name='access_period',
            field=models.PositiveIntegerField(help_text='Введите целое число, которое будет означать количество дней', null=True, verbose_name='На сколько дней открыт доступ к модулям и урокам курса после покупки'),
        ),
        migrations.AlterField(
            model_name='course',
            name='adding_date',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления'),
        ),
        migrations.AlterField(
            model_name='course',
            name='certificate',
            field=models.BooleanField(default=False, help_text='Поставьте галочку, если по окончанию курса участникам выдается сертификат', verbose_name='Выдается сертификат'),
        ),
        migrations.AlterField(
            model_name='course',
            name='certificate_image',
            field=models.ImageField(blank=True, help_text='Если выше вы указали, что сертификат выдается, обязательно необходимо к данному курсу прикрепить его пример', null=True, upload_to='courses/%Y-%m-%d/', verbose_name='Картинка сертификата'),
        ),
        migrations.AlterField(
            model_name='course',
            name='detail_description',
            field=models.TextField(verbose_name='Детальное описание курса'),
        ),
        migrations.AlterField(
            model_name='course',
            name='detail_image',
            field=models.ImageField(upload_to='courses/%Y-%m-%d/', verbose_name='Картинка к детальному описанию курса'),
        ),
        migrations.AlterField(
            model_name='course',
            name='header_image',
            field=models.ImageField(help_text='Главное изображение, которое выводится в шапке лендинга', upload_to='courses/%Y-%m-%d/', verbose_name='Главное изображение'),
        ),
        migrations.AlterField(
            model_name='course',
            name='is_published',
            field=models.BooleanField(default=True, help_text='Курс опубликован на сайте, доступен к покупке и регистрации. Во время начала курса не забудьте снять галочку', verbose_name='Опубликован'),
        ),
        migrations.AlterField(
            model_name='course',
            name='preview_image',
            field=models.ImageField(help_text='Картинка, которая выводится в кратком описании курса в списке всех курсов', upload_to='courses/%Y-%m-%d/', verbose_name='Анонс картинка'),
        ),
        migrations.AlterField(
            model_name='course',
            name='price',
            field=models.DecimalField(decimal_places=0, help_text='Введите целое число без дробной части', max_digits=5, verbose_name='Стоимость'),
        ),
        migrations.AlterField(
            model_name='course',
            name='results',
            field=models.TextField(help_text='Опишите, какие результаты получат участники курса после его окончания', verbose_name='результат курса'),
        ),
        migrations.AlterField(
            model_name='course',
            name='short_description',
            field=models.TextField(help_text='Краткое описание курса. Макс. длина 300 символов', max_length=300, verbose_name='Краткое описание'),
        ),
        migrations.AlterField(
            model_name='course',
            name='slug',
            field=models.SlugField(help_text='Поле автозаполняемо. Должно быть уникально', unique=True, verbose_name='Слаг'),
        ),
        migrations.AlterField(
            model_name='course',
            name='subject',
            field=models.ForeignKey(help_text='К какому субъекту относится данный поток курса', on_delete=django.db.models.deletion.CASCADE, to='courses.subject', verbose_name='Субъект'),
        ),
        migrations.AlterField(
            model_name='course',
            name='subtitle',
            field=models.CharField(help_text='Макс. длина 250 символов', max_length=250, verbose_name='Подзаголовок'),
        ),
        migrations.AlterField(
            model_name='course',
            name='title',
            field=models.CharField(help_text='Название курса. Служит заголовком на лендинге. Желательно, чтобы было в едином стиле с предыдущими потоками. Макс. длина 200 символов', max_length=200, verbose_name='Название курса'),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='description',
            field=models.TextField(blank=True, verbose_name='Описание урока'),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='is_active',
            field=models.BooleanField(default=False, verbose_name='Доступен к прохождению'),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='is_published',
            field=models.BooleanField(default=True, help_text='Урок показан на лендинге курса и в кабинете пользователя', verbose_name='Опубликован'),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='materials',
            field=models.URLField(blank=True, verbose_name='Ссылка на материалы'),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='module',
            field=models.ForeignKey(help_text='К какому модулю относится урок', on_delete=django.db.models.deletion.CASCADE, to='courses.module', verbose_name='модуль'),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='title',
            field=models.CharField(help_text='Макс. длина 150 символов', max_length=150, verbose_name='Название урока'),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='video',
            field=models.URLField(blank=True, help_text='В формате "http://..."', verbose_name='Ссылка на видео трансляцию'),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='video_record',
            field=models.URLField(blank=True, help_text='В формате "http://..."', null=True, verbose_name='Ссылка на запись урока'),
        ),
        migrations.AlterField(
            model_name='module',
            name='course',
            field=models.ForeignKey(help_text='К какому курсу относится модуль', on_delete=django.db.models.deletion.CASCADE, to='courses.course', verbose_name='Курс'),
        ),
        migrations.AlterField(
            model_name='module',
            name='description',
            field=models.TextField(blank=True, verbose_name='Описание модуля'),
        ),
        migrations.AlterField(
            model_name='module',
            name='is_active',
            field=models.BooleanField(default=False, verbose_name='Доступен к прохождению'),
        ),
        migrations.AlterField(
            model_name='module',
            name='is_published',
            field=models.BooleanField(default=True, help_text='Модуль показан на лендинге курса и в кабинете пользователя', verbose_name='Опубликован'),
        ),
        migrations.AlterField(
            model_name='module',
            name='title',
            field=models.CharField(help_text='Макс. длина 150 символов', max_length=150, verbose_name='Название модуля'),
        ),
        migrations.AlterField(
            model_name='person',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course', verbose_name='Курс'),
        ),
        migrations.AlterField(
            model_name='person',
            name='image_person',
            field=models.ImageField(upload_to='courses/%Y-%m-%d/', verbose_name='Картинка к типу персонажа'),
        ),
        migrations.AlterField(
            model_name='person',
            name='person',
            field=models.CharField(max_length=50, verbose_name='Тип персонажа'),
        ),
        migrations.AlterField(
            model_name='person',
            name='person_detail',
            field=models.CharField(max_length=100, verbose_name='Краткое описание персонажа'),
        ),
        migrations.AlterField(
            model_name='subject',
            name='short_description',
            field=models.CharField(max_length=200, verbose_name='Краткое описание'),
        ),
        migrations.AlterField(
            model_name='subject',
            name='students',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Студенты'),
        ),
        migrations.AlterField(
            model_name='subject',
            name='title',
            field=models.CharField(max_length=200, verbose_name='Название категории'),
        ),
        migrations.CreateModel(
            name='CoursePromocode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Набор символов длиной до 20 знаков', max_length=20, verbose_name='Промокод')),
                ('discount', models.PositiveSmallIntegerField(help_text='Процент скидки, которую предоставляет промокод. Нужно ввести целое число (без символа процента). Минимальное значение - 0, максимальное - 100', verbose_name='Процент скидки')),
                ('is_active', models.BooleanField(default=True, verbose_name='Промокод активен и действует')),
                ('courses', models.ManyToManyField(to='courses.Course', verbose_name='На какие курсы распространяется промокод')),
            ],
            options={
                'verbose_name': 'Промокод',
                'verbose_name_plural': 'Промокоды',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='CourseOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_reference', models.CharField(max_length=30, verbose_name='Уникальный номер заказа')),
                ('status', models.CharField(choices=[('cancelled', 'Отменен'), ('wait_paid', 'Ожидается оплата'), ('paid', 'Оплачен')], max_length=30, verbose_name='Статус заказа')),
                ('order_sum', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Сумма покупки')),
                ('payment_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата покупки курса')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.course', verbose_name='Какой курс был приобретен')),
                ('promocode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.coursepromocode', verbose_name='Промокод')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Участник')),
            ],
            options={
                'verbose_name': 'Заказ курса',
                'verbose_name_plural': 'Заказы курсов',
                'ordering': ['-payment_date'],
            },
        ),
    ]
