# Generated by Django 3.1.3 on 2021-01-04 12:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('shop', '0005_auto_20201223_1354'),
    ]

    operations = [
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Например: Новая почта', max_length=50, verbose_name='Название службы доставки')),
                ('image', models.ImageField(upload_to='images/shop/%Y-%m-%d/', verbose_name='Логотип службы доставки')),
                ('is_published', models.BooleanField(default=True, help_text='Если опубликовано, способ доставки будет доступен пользователям при оформлении заказа', verbose_name='Опубликовано')),
            ],
            options={
                'verbose_name': 'Служба доставки',
                'verbose_name_plural': 'Службы доставки',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('cancelled', 'Отменен'), ('wait_paid', 'Ожидается оплата'), ('paid', 'Оплачен'), ('sent', 'Отправлен'), ('done', 'Выполнен')], max_length=30, verbose_name='Статус заказа')),
                ('order_sum', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Сумма заказа')),
                ('last_name', models.CharField(max_length=30, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=30, verbose_name='Имя')),
                ('phone', models.CharField(max_length=30, verbose_name='Телефон')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('region', models.CharField(max_length=50, verbose_name='Область')),
                ('district', models.CharField(max_length=50, verbose_name='Район')),
                ('city', models.CharField(max_length=50, verbose_name='Город')),
                ('delivery_office', models.CharField(max_length=200, verbose_name='Адрес и номер отделения выбранной службы доставки')),
                ('adding_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата оформления заказа')),
                ('is_done', models.BooleanField(default=False, verbose_name='Выполнен')),
                ('consumer', models.ForeignKey(blank=True, help_text='Если человек зарегистрирован на сайте, будет указано его имя и фамилия', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Покупатель')),
                ('delivery', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.delivery', verbose_name='Способ доставки')),
            ],
            options={
                'verbose_name': 'заказ',
                'verbose_name_plural': 'заказы',
                'ordering': ['-adding_date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Например: "WayForPay"', max_length=50, verbose_name='Название способа оплаты')),
                ('payment_type', models.CharField(choices=[('WFP', 'WayForPay'), ('ANY', 'Другой способ')], help_text='Обратите внимание, что только для WayForPay будет доступна автоматическая онлайн-оплата заказа. Другие типы оплаты будут только выводиться на странице оформления заказа как альтернативные, и оплатить заказ человек сможет только после того, как менеджер с ним свяжется по телефону', max_length=30, verbose_name='Тип способа оплаты')),
                ('MERCHANT_LOGIN', models.CharField(help_text='Только для WayForPay. Это значение вы можете получить в ЛК WayForPay в настройках магазина во вкладке "Реквизиты мерчанта"', max_length=100, verbose_name='MERCHANT LOGIN')),
                ('MERCHANT_SECRET_KEY', models.CharField(help_text='Только для WayForPay. Это значение вы можете получить в ЛК WayForPay в настройках магазина во вкладке "Реквизиты мерчанта"', max_length=200, verbose_name='MERCHANT SECRET KEY')),
                ('logo', models.ImageField(upload_to='images/shop/%Y-%m-%d/')),
                ('short_description', models.CharField(help_text='Краткое описание системы оплаты. На странице сайта будет показано пользователю, если данный способ оплаты опубликован. Например: "WayForPay - автоматическая оплата с полной оплатой товара с помощью карты Visa/MasterCard"', max_length=300, verbose_name='Краткое описание')),
                ('prepayment', models.PositiveSmallIntegerField(help_text='Это значение нужно указывать только для WayForPay. Значение должно быть числом от 0 до 100. Какой процент укажете, такой человек размер предоплаты и внесет во время автоматической оплаты после оформления заказа', verbose_name='Процент предоплаты')),
                ('is_published', models.BooleanField(default=True, help_text='Если стоит галочка, то данный способ оплаты будет опубликован на сайте в момент оформления заказа, как альтернативный. (Без автоматической онлайн оплаты, а по согласованию, когда продавец свяжется с клиентом по телефону или e-mail)', verbose_name='Опубликовано')),
            ],
            options={
                'verbose_name': 'Способ оплаты',
                'verbose_name_plural': 'Способы оплаты',
            },
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Набор символов длиной до 20 знаков', max_length=20, verbose_name='Промокод')),
                ('discount', models.PositiveSmallIntegerField(help_text='Процент скидки, которую предоставляет промокод. Нужно ввести целое число (без символа процента). Минимальное значение - 0, максимальное - 100', verbose_name='Процент скидки')),
                ('is_active', models.BooleanField(default=True, verbose_name='Промокод активен и действует')),
            ],
            options={
                'verbose_name': 'Промокод',
                'verbose_name_plural': 'Промокоды',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveSmallIntegerField(verbose_name='количество')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.order', verbose_name='К какому заказу относится')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Позиция в заказе',
                'verbose_name_plural': 'Позиции в заказе',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='promocode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.promocode', verbose_name='Промокод'),
        ),
    ]
